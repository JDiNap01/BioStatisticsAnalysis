---
title: "Palmer Penguins Initial Analysis"
author: "Joshua DiNapoli"
format: html
editor: visual
execute:
  keep-md: true
---

## *Palmer Penguins*

This document analysizes different populations of penguins and their relative weights and sizes. This is my first notebook.

## Running Code

Here we will load the tidyverse package and paenguins dataset

```{r}
#Load the tidyverse
library(tidyverse)
library(kableExtra)

#Read the penguins_samp1 data file from github
penguins <- read_csv("https://raw.githubusercontent.com/mcduryea/Intro-to-Bioinformatics/main/data/penguins_samp1.csv")

#See the first six rows of the data we've read in to our notebook. Clean up tables with kable extra.
penguins %>%
  head() %>%
  kable() %>%
  kable_styling(c("striped","hover"))
  

```

The different tables are organized by species, the island the species was found, its bill length and depth, flipper length and depth, the body mass, year of discovery, and sex.

## About our data

The data we are working with is a dataset on Penguins, which features the variables: species, island, bill length/depth, flipper length, body mass, sex, and year.

-   What is the average flipper length by species?

-   Are there more male or female penguins on each island?

-   What is the mean body mass per island, species, sex?

-   What is the ratio of bill length to bill depth for a penguin? What is the overall average of this metric? Does it change by species, sex, or island?

-   Does average body mass change by year?

## Data Manipulation Tools and Strategies

We can look at individual columns in in a data set or subsets of columns in a dataset. If we are only interested in flipper length and species, we can `select()` those columns

/

```{r}
penguins %>%
  select(species, body_mass_g)

```

if we want to `filter()` and only show certain rows, we can do that too.

```{r}
penguins%>%
  filter(species == "Chinstrap")

#we can see also do both
penguins%>%
  filter((body_mass_g == 6000) | (island == "Togersen"))
```

## Answering Our Questions

Most of our questions involve summarizing data, and perhaps summarizing our groups. We can summarize data using the `summarize()` function and group data using `group_by()`.

Let's find the average flipper length.

```{r}
penguins%>%
  summarize(avg_flipper_length = mean(flipper_length_mm))
            
penguins%>%
  filter(species == "Gentoo") %>%
  summarize(avg_flipper_length = mean(flipper_length_mm))
  
#Grouped Average
penguins%>%
  group_by(species) %>%
  summarize(avg_flipper_length = mean(flipper_length_mm))
```

```{r}
#Are there more male or female penguins
penguins%>%
  count(sex)

#What is the mean body mass per island
penguins%>%
  group_by(island)%>%
  summarize(avg_body_mass_g = mean(body_mass_g))

#What is the mean body mass per species
penguins%>%
  group_by(species)%>%
  summarize(avg_body_mass_g = mean(body_mass_g))

#What is the mean body mass per sex
penguins%>%
  group_by(sex)%>%
  summarize(avg_body_mass_g = mean(body_mass_g))

  
  
```

We can `mutate()` to add new columns to our data set

```{r}
#What is the bill length to depth ratio
penguins%>%
  group_by(species)%>%
  mutate(bill_ltd_ratio = bill_length_mm / bill_depth_mm)%>%
  summarize(avg_bill_ltd_ratio = mean(bill_ltd_ratio),
            median_bill_ltd_ratio  = median(bill_ltd_ratio))
#What is the 
penguins%>%
  group_by(year)%>%
  summarize(mean_body_mass = mean(body_mass_g))
```

## Data Visualization with `ggplot()`

There are entire courses on data visualization. We'll give you just a taste of it here.

**One Categorical Variable:** We can visualize a categorical variable with a barplot

```{r}
penguins%>%
  ggplot() +
  geom_bar(mapping = aes(x = species))
  labs(title = "counts of Penguin Species", x = "Species", y = "Count")
```

-   This plot shows that the gentoo species are by far the most numerous and the chinstrap are numbered the lowest.

-   The + sign in the ggplot is meant to add the specific data visualization method (barplot, histogram, etc.)

```{r}
penguins%>%
  ggplot() +
  geom_bar(mapping = aes(x = sex)) 
  labs(title = "Counts of Penguins by Sex", x = "Island", y= "Count")
```

Histograms will show the shape of the data

Boxplots are great at finding outliers and where your data "lives".

One categorical variable: Barplot

Comparing two numerical variables: scatterplot

Two categorical variables: barplots with fill color

One numerical one categorical: side by side boxplots. Overlayed histograms. "faceting"

**One Numerical Variable**: Distribution of Bill Lengths (Histograms or Boxplots)

```{r}
penguins%>%
  ggplot()+
  geom_histogram(mapping = aes(x=bill_length_mm),
                 color = "white",
                 fill = "blue") +
  labs(title = "Distribution of Bill Lengths",
       x= "Bill Length(mm)", y="Count")
```

**Distribution of Flipper Length**

```{r}
penguins%>%
  ggplot() +
  geom_histogram(mapping = aes(x=flipper_length_mm))
  labs(title = "Distribution of Penguin Flipper Length", x = "Flipper Length", y = "Count")
```

```{r}
penguins%>%
  ggplot()+
  geom_histogram(aes(x=flipper_length_mm),
                bins = 15,
                fill = "forestgreen",
                color = "black") +
  labs(title="Distribution of Flipper Length", 
       y="", x = "Flipper Length (mm)",
       subtitle ="Mean in Black, Median in Purple") +
  geom_vline(aes(xintercept = mean(flipper_length_mm)), lwd = 2, lty = "dashed") +
  geom_vline(aes(xintercept = median(flipper_length_mm)), fill ="black",
             color="red", lwd = 2, lty = "dashed")
```

-   The data is skewed left since the mean is lower than the median

**Distribution of Species**

```{r}
penguins%>%
  ggplot()+
  geom_bar(mapping = aes(x=island, fill = species)) +
  labs(title = "Distribution of Species",
       x= "Island",
       y= "Species")
```

**One Numerical and One Categorical**: Bill Depth by Species

```{r}
penguins%>%
  ggplot() +
  geom_boxplot(mapping = aes(x=bill_depth_mm, y = species)) +
  labs(title = "Distribution of Bill Depth by species", x = "Bill Depth (mm)", y = "Species")

```

**Two Numerical Variable**: Bill Length vs Bill Depth (scatterplot)

```{r}
penguins%>%
  ggplot() +
  geom_point(aes(x = bill_length_mm, y = bill_depth_mm, color = species))+
  geom_smooth(aes(x = bill_length_mm, y = bill_depth_mm, color = species), method = "lm")+
  labs(title = "Comparison of Bill Length vs Bill Depth", x = "Bill Length (mm)", y= "Bill Depth(mm)")
```

Within each species, the longer the beak, the deeper the beak.

**Does the average bill length meet or exceed 45 mm?**

```{r}
penguins%>%
  summarize(avg_bill_length = mean(bill_length_mm))
```

-   Hypothesis Tests

-   Confidence Intervals

-   Can we run an hypothesis test to determine if the avg bill length is greater than 45 mm?

-   The data wrote the test, we cant use the data to take the test. Its biased and confirmatifon bias. Data cannot inform the questions we ask and answer the questions

## Revisting Intro Stats

-   Assume Central Limit Theroem: The sampling distribution tends towards a normal distribution as sample sizes get larger.

-   Sampling Distribution: If we took lots of samples of 44 penguins and computed the sample mean bill length of each. Take the average bill lengths of a sample lots of time creating a histogram. We never build a sampling distribution (funding. We usually just take one sample and assume a normal through inference). Assumes that the more sample means we add, the closer we get to central limit theorem.

-   Normal distribution has bell curve with expected samples and unsuaul samples on tails.

-   Hypothesis Tests: Our assumption is either wrong (due to unsuaul samples or tails) or in the expected range. If the p-value is below the level of significance.

## Simulation Based Methods

```{r}
n_samps <- 1000
sample_means <- rep(NA, n_samps)
for(i in 1:n_samps){
  my_samp <- penguins %>%
    sample_n(nrow(penguins), replace = TRUE)
  sample_means[i] <- my_samp %>%
    summarize(mean = mean(flipper_length_mm, na.rm = TRUE)) %>%
    pull(mean)
}

ggplot() +
  geom_histogram(aes(x = sample_means)) +
  labs(title = "Distribution of Bootstrap Samples",
       x = "Sample Mean Flipper Lengths (mm)",
       y = "")

```

```{r}
num_samps <- 1000
bootstrapped_mean_lengths <- rep(NA, num_samps)

for(i in 1:num_samps){
  my_samp <- rnorm(nrow(penguins), 200, 5)
  bootstrapped_mean_lengths[i] <- mean(my_samp)
  }

my_mean_flipper_length <- penguins %>%
  summarize(mean = mean(flipper_length_mm, na.rm = TRUE)) %>%
  pull(mean)

ggplot() + 
  geom_histogram(aes(x = bootstrapped_mean_lengths)) +
  geom_vline(aes(xintercept = my_mean_flipper_length), 
             color = "blue",
             lwd = 1.5,
             linetype = "dashed") +
  labs(title = "Bootstrapped Hypothesis Test",
       subtitle = "Mean Flipper Length",
       x = "Bootstrapped Mean Flipper Lengths (~N(200, 5))",
       Y = "")
```
